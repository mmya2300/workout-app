{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmya2\\\\github-classroom\\\\UCF-GaiM\\\\dig4639-s23-main-mmya2300\\\\unit1\\\\lab6\\\\src\\\\components\\\\WeightExercise\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeightExercise(props) {\n  _s();\n  // Destructure the props to extract the name and image\n  const {\n    name,\n    img\n  } = props.selectedWorkout;\n\n  // State variables to keep track of the input values and exercise state\n  const [weight, setWeight] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [holdTime, setHoldTime] = useState(0);\n  const [countdown, setCountdown] = useState(0);\n  const [mode, setMode] = useState('lifting'); // 'lifting', 'holding', or 'break'\n  const [isHolding, setIsHolding] = useState(false);\n  const [currentRep, setCurrentRep] = useState(1); // current rep number\n\n  // Function to handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault(); // prevent the default form submission behavior\n    setCountdown(3); // set the countdown to 3 seconds\n    setMode('lifting'); // set the mode to 'lifting'\n  };\n\n  // Function to handle the weight input change\n  const handleWeightChange = event => {\n    setWeight(event.target.value);\n  };\n\n  // Function to handle the reps input change\n  const handleRepsChange = event => {\n    setReps(event.target.value);\n  };\n\n  // Function to handle the hold time input change\n  const handleHoldTimeChange = event => {\n    setHoldTime(event.target.value);\n  };\n\n  // Countdown effect\n\n  // Countdown effect\n  useEffect(() => {\n    let timerId;\n    if (mode === \"lifting\" && countdown > 0) {\n      timerId = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (mode === \"lifting\" && countdown === 0) {\n      setMode(\"holding\");\n      setCountdown(holdTime);\n    } else if (mode === \"holding\" && countdown > 0) {\n      timerId = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (mode === \"holding\" && countdown === 0) {\n      setMode(\"breaking\");\n      setCountdown(breakTime);\n      setReps(reps + 1);\n    } else if (mode === \"breaking\" && countdown > 0) {\n      timerId = setTimeout(() => {\n        setCountdown(countdown - 1);\n      }, 1000);\n    } else if (mode === \"breaking\" && countdown === 0) {\n      setMode(\"lifting\");\n      setCountdown(liftTime);\n    }\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [countdown, mode, holdTime, liftTime, breakTime, reps]);\n\n  // Render the component with a form to input weight, reps, and hold time\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: img[0].name,\n      alt: img[0].altText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Weight:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: weight,\n          onChange: handleWeightChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: reps,\n          onChange: handleRepsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Lift Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: liftTime,\n          onChange: handleLiftTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hold Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: holdTime,\n          onChange: handleHoldTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Break Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: breakTime,\n          onChange: handleBreakTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isHolding,\n        children: mode === \"lifting\" ? `Lifting (${countdown})` : mode === \"holding\" ? `Holding (${countdown})` : `Breaking (${countdown})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(WeightExercise, \"Sigox1Yn7vR8aYd5o2gabAItHXs=\");\n_c = WeightExercise;\nexport default WeightExercise;\nvar _c;\n$RefreshReg$(_c, \"WeightExercise\");","map":{"version":3,"names":["React","useState","useEffect","WeightExercise","props","name","img","selectedWorkout","weight","setWeight","reps","setReps","holdTime","setHoldTime","countdown","setCountdown","mode","setMode","isHolding","setIsHolding","currentRep","setCurrentRep","handleSubmit","event","preventDefault","handleWeightChange","target","value","handleRepsChange","handleHoldTimeChange","timerId","setTimeout","breakTime","liftTime","clearTimeout","altText","handleLiftTimeChange","handleBreakTimeChange"],"sources":["C:/Users/mmya2/github-classroom/UCF-GaiM/dig4639-s23-main-mmya2300/unit1/lab6/src/components/WeightExercise/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction WeightExercise(props) {\r\n  // Destructure the props to extract the name and image\r\n  const { name, img } = props.selectedWorkout;\r\n\r\n  // State variables to keep track of the input values and exercise state\r\n  const [weight, setWeight] = useState(0);\r\n  const [reps, setReps] = useState(0);\r\n  const [holdTime, setHoldTime] = useState(0);\r\n  const [countdown, setCountdown] = useState(0);\r\n  const [mode, setMode] = useState('lifting'); // 'lifting', 'holding', or 'break'\r\n  const [isHolding, setIsHolding] = useState(false);\r\n  const [currentRep, setCurrentRep] = useState(1); // current rep number\r\n\r\n  // Function to handle the form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); // prevent the default form submission behavior\r\n    setCountdown(3); // set the countdown to 3 seconds\r\n    setMode('lifting'); // set the mode to 'lifting'\r\n  };\r\n\r\n  // Function to handle the weight input change\r\n  const handleWeightChange = (event) => {\r\n    setWeight(event.target.value);\r\n  };\r\n\r\n  // Function to handle the reps input change\r\n  const handleRepsChange = (event) => {\r\n    setReps(event.target.value);\r\n  };\r\n\r\n  // Function to handle the hold time input change\r\n  const handleHoldTimeChange = (event) => {\r\n    setHoldTime(event.target.value);\r\n  };\r\n\r\n  // Countdown effect\r\n\r\n  // Countdown effect\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (mode === \"lifting\" && countdown > 0) {\r\n      timerId = setTimeout(() => {\r\n        setCountdown(countdown - 1);\r\n      }, 1000);\r\n    } else if (mode === \"lifting\" && countdown === 0) {\r\n      setMode(\"holding\");\r\n      setCountdown(holdTime);\r\n    } else if (mode === \"holding\" && countdown > 0) {\r\n      timerId = setTimeout(() => {\r\n        setCountdown(countdown - 1);\r\n      }, 1000);\r\n    } else if (mode === \"holding\" && countdown === 0) {\r\n      setMode(\"breaking\");\r\n      setCountdown(breakTime);\r\n      setReps(reps + 1);\r\n    } else if (mode === \"breaking\" && countdown > 0) {\r\n      timerId = setTimeout(() => {\r\n        setCountdown(countdown - 1);\r\n      }, 1000);\r\n    } else if (mode === \"breaking\" && countdown === 0) {\r\n      setMode(\"lifting\");\r\n      setCountdown(liftTime);\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [countdown, mode, holdTime, liftTime, breakTime, reps]);\r\n\r\n  // Render the component with a form to input weight, reps, and hold time\r\n  return (\r\n    <div>\r\n      <h1>{name}</h1>\r\n      <img src={img[0].name} alt={img[0].altText} />\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Weight:\r\n          <input type=\"number\" value={weight} onChange={handleWeightChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Reps:\r\n          <input type=\"number\" value={reps} onChange={handleRepsChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Lift Time:\r\n          <input type=\"number\" value={liftTime} onChange={handleLiftTimeChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Hold Time:\r\n          <input type=\"number\" value={holdTime} onChange={handleHoldTimeChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Break Time:\r\n          <input type=\"number\" value={breakTime} onChange={handleBreakTimeChange} />\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\" disabled={isHolding}>\r\n          {mode === \"lifting\" ? `Lifting (${countdown})` :\r\n            mode === \"holding\" ? `Holding (${countdown})` :\r\n              `Breaking (${countdown})`}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeightExercise;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}