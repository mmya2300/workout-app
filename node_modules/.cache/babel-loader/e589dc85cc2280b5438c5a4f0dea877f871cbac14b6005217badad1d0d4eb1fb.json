{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmya2\\\\github-classroom\\\\UCF-GaiM\\\\dig4639-s23-main-mmya2300\\\\unit1\\\\lab6\\\\src\\\\components\\\\DurationExercise\\\\index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useRef, useState } from 'react';\nimport runner from '../../images/running vector.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DurationExercise(props) {\n  _s();\n  const {\n    name\n  } = props;\n  const [time, setTime] = useState(0);\n  const [running, setRunning] = useState(false);\n  const intervalRef = useRef(null);\n  // mutable value that persists through component renders\n  // available across all these functions and can be used to clear the interval at the appropriate time.\n\n  // starts the timer if it's not already running\n  // starts a new interval every 10 milliseconds that updates the timer by adding 10 to the previous time\n  function startTimer() {\n    if (!running) {\n      intervalRef.current = setInterval(function () {\n        setTime(function (prevTime) {\n          return prevTime + 10;\n        });\n      }, 10);\n      setRunning(true);\n    }\n  }\n\n  // stops the timer by clearing the interval and setting the running to false\n  function stopTimer() {\n    clearInterval(intervalRef.current);\n    setRunning(false);\n  }\n  // stops the timer and resets the timer to 0 \n  function resetTimer() {\n    clearInterval(intervalRef.current);\n    setTime(0);\n    setRunning(false);\n  }\n\n  // makes it so the time appears hh:mm:ss.sss\n  function formatTime(time) {\n    const date = new Date(time);\n    return date.toISOString().substring(11, 23);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: runner,\n      alt: \"running\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Duration: \", formatTime(time)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick:\n        // reloads the page back to the main menu\n        () => window.location.reload(),\n        children: \"Return to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(DurationExercise, \"8SK3uoGkT0fg1tEZ8gL4/7e+Mg4=\");\n_c = DurationExercise;\nvar _c;\n$RefreshReg$(_c, \"DurationExercise\");","map":{"version":3,"names":["React","useRef","useState","runner","DurationExercise","props","name","time","setTime","running","setRunning","intervalRef","startTimer","current","setInterval","prevTime","stopTimer","clearInterval","resetTimer","formatTime","date","Date","toISOString","substring","window","location","reload"],"sources":["C:/Users/mmya2/github-classroom/UCF-GaiM/dig4639-s23-main-mmya2300/unit1/lab6/src/components/DurationExercise/index.js"],"sourcesContent":["import React from 'react'\r\nimport { useRef, useState } from 'react';\r\nimport runner from '../../images/running vector.png'\r\n\r\nexport default function DurationExercise(props) {\r\n  const {name} = props\r\n  const [time, setTime] = useState(0)\r\n  const [running, setRunning] = useState(false)\r\n  const intervalRef = useRef(null)\r\n  // mutable value that persists through component renders\r\n  // available across all these functions and can be used to clear the interval at the appropriate time.\r\n  \r\n  // starts the timer if it's not already running\r\n  // starts a new interval every 10 milliseconds that updates the timer by adding 10 to the previous time\r\n  function startTimer() {\r\n    if (!running) { \r\n      intervalRef.current = setInterval(function() {\r\n        setTime(function(prevTime) {\r\n          return prevTime + 10\r\n        })\r\n      }, 10)\r\n      setRunning(true)\r\n    }\r\n  }\r\n\r\n  // stops the timer by clearing the interval and setting the running to false\r\n  function stopTimer() {\r\n    clearInterval(intervalRef.current)\r\n    setRunning(false)\r\n  }\r\n  // stops the timer and resets the timer to 0 \r\n  function resetTimer() {\r\n    clearInterval(intervalRef.current)\r\n    setTime(0)\r\n    setRunning(false)\r\n  }\r\n  \r\n  // makes it so the time appears hh:mm:ss.sss\r\n  function formatTime(time) {\r\n    const date = new Date(time)\r\n    return date.toISOString().substring(11, 23)\r\n  }\r\n  return (\r\n    <div className='content'>\r\n      <h1>{name}</h1>\r\n      <img src={runner} alt=\"running\" />\r\n      <p>Duration: {formatTime(time)}</p>\r\n      <div className='options'>\r\n      <button onClick={startTimer}>Start</button>\r\n      <button onClick={stopTimer}>Stop</button>\r\n      <button onClick={resetTimer}>Reset</button>\r\n       <button onClick={// reloads the page back to the main menu\r\n        () => window.location.reload()}>\r\n        Return to Home\r\n      </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,iCAAiC;AAAA;AAEpD,eAAe,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAC9C,MAAM;IAACC;EAAI,CAAC,GAAGD,KAAK;EACpB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMS,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC;EACA;;EAEA;EACA;EACA,SAASW,UAAU,GAAG;IACpB,IAAI,CAACH,OAAO,EAAE;MACZE,WAAW,CAACE,OAAO,GAAGC,WAAW,CAAC,YAAW;QAC3CN,OAAO,CAAC,UAASO,QAAQ,EAAE;UACzB,OAAOA,QAAQ,GAAG,EAAE;QACtB,CAAC,CAAC;MACJ,CAAC,EAAE,EAAE,CAAC;MACNL,UAAU,CAAC,IAAI,CAAC;IAClB;EACF;;EAEA;EACA,SAASM,SAAS,GAAG;IACnBC,aAAa,CAACN,WAAW,CAACE,OAAO,CAAC;IAClCH,UAAU,CAAC,KAAK,CAAC;EACnB;EACA;EACA,SAASQ,UAAU,GAAG;IACpBD,aAAa,CAACN,WAAW,CAACE,OAAO,CAAC;IAClCL,OAAO,CAAC,CAAC,CAAC;IACVE,UAAU,CAAC,KAAK,CAAC;EACnB;;EAEA;EACA,SAASS,UAAU,CAACZ,IAAI,EAAE;IACxB,MAAMa,IAAI,GAAG,IAAIC,IAAI,CAACd,IAAI,CAAC;IAC3B,OAAOa,IAAI,CAACE,WAAW,EAAE,CAACC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC;EAC7C;EACA,oBACE;IAAK,SAAS,EAAC,SAAS;IAAA,wBACtB;MAAA,UAAKjB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAK,GAAG,EAAEH,MAAO;MAAC,GAAG,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAA,WAAG,YAAU,EAACgB,UAAU,CAACZ,IAAI,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACnC;MAAK,SAAS,EAAC,SAAS;MAAA,wBACxB;QAAQ,OAAO,EAAEK,UAAW;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3C;QAAQ,OAAO,EAAEI,SAAU;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eACzC;QAAQ,OAAO,EAAEE,UAAW;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eAC1C;QAAQ,OAAO;QAAE;QAChB,MAAMM,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAG;QAAA,UAAC;MAElC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtDuBtB,gBAAgB;AAAA,KAAhBA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}