{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmya2\\\\github-classroom\\\\UCF-GaiM\\\\dig4639-s23-main-mmya2300\\\\unit1\\\\lab6\\\\src\\\\components\\\\WeightExercise\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeightExercise(props) {\n  _s();\n  // Destructure the props to extract the name and image\n  const {\n    name,\n    img\n  } = props.selectedWorkout;\n\n  // State variables to keep track of the input values and exercise state\n  const [weight, setWeight] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [holdTime, setHoldTime] = useState(0);\n  const [isLifting, setIsLifting] = useState(false);\n  const [isHolding, setIsHolding] = useState(false);\n  const [isBreaking, setIsBreaking] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const [breakTimer, setBreakTimer] = useState(30);\n  const [currentReps, setCurrentReps] = useState(0);\n\n  // Function to handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault(); // prevent the default form submission behavior\n    setIsLifting(true); // start lifting\n    setTimer(3); // set countdown to 3 seconds\n  };\n\n  // Function to handle the weight input change\n  const handleWeightChange = event => {\n    setWeight(event.target.value);\n  };\n\n  // Function to handle the reps input change\n  const handleRepsChange = event => {\n    setReps(event.target.value);\n  };\n\n  // Function to handle the hold time input change\n  const handleHoldTimeChange = event => {\n    setHoldTime(event.target.value);\n  };\n\n  // Countdown effect for lifting\n  useEffect(() => {\n    let timerId;\n    if (isLifting && timer > 0) {\n      timerId = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isLifting && timer === 0) {\n      setIsLifting(false);\n      setIsHolding(true);\n      setTimer(holdTime); // start holding for the specified hold time\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [isLifting, holdTime, timer]);\n\n  // Countdown effect for holding\n  useEffect(() => {\n    let timerId;\n    if (isHolding && timer > 0) {\n      timerId = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isHolding && timer === 0) {\n      setIsHolding(false);\n      setIsBreaking(true);\n      setBreakTimer(30); // start the break timer\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [isHolding, timer]);\n  useEffect(() => {\n    let timerId;\n    if (isBreaking && timer > 0) {\n      timerId = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isBreaking && timer === 0) {\n      setIsBreaking(false);\n      setIsLifting(true);\n      setReps(reps + 1 / weight); // increment the reps\n      setTimer(3); // set countdown to 3 seconds\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [isBreaking, timer, reps, weight]);\n\n  // Function to handle the restart button click\n  const handleRestartClick = () => {\n    setIsBreaking(false);\n    setIsLifting(true);\n    setReps(reps + 1 / weight); // increment the reps\n    setTimer(3); // set countdown to 3 seconds\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isLifting ? img[1].name : isHolding ? img[0].name : img[2].name,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Weight:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: weight,\n          onChange: handleWeightChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: reps,\n          onChange: handleRepsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hold time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: holdTime,\n          onChange: handleHoldTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), !isLifting && !isHolding && !isBreaking && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 53\n      }, this), (isLifting || isBreaking) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: isLifting ? `Lifting ${timer}...` : `Break for ${timer} seconds...`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 39\n      }, this), isHolding && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hold for \", timer, \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), isBreaking && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: true,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(WeightExercise, \"rSnqF8ocntzr6I8VDTqg+voMm1o=\");\n_c = WeightExercise;\nvar _c;\n$RefreshReg$(_c, \"WeightExercise\");","map":{"version":3,"names":["React","useState","useEffect","WeightExercise","props","name","img","selectedWorkout","weight","setWeight","reps","setReps","holdTime","setHoldTime","isLifting","setIsLifting","isHolding","setIsHolding","isBreaking","setIsBreaking","timer","setTimer","breakTimer","setBreakTimer","currentReps","setCurrentReps","handleSubmit","event","preventDefault","handleWeightChange","target","value","handleRepsChange","handleHoldTimeChange","timerId","setTimeout","clearTimeout","handleRestartClick"],"sources":["C:/Users/mmya2/github-classroom/UCF-GaiM/dig4639-s23-main-mmya2300/unit1/lab6/src/components/WeightExercise/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function WeightExercise(props) {\r\n  // Destructure the props to extract the name and image\r\n  const { name, img } = props.selectedWorkout;\r\n\r\n  // State variables to keep track of the input values and exercise state\r\n  const [weight, setWeight] = useState(0);\r\n  const [reps, setReps] = useState(0);\r\n  const [holdTime, setHoldTime] = useState(0);\r\n  const [isLifting, setIsLifting] = useState(false);\r\n  const [isHolding, setIsHolding] = useState(false);\r\n  const [isBreaking, setIsBreaking] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [breakTimer, setBreakTimer] = useState(30);\r\n  const [currentReps, setCurrentReps] = useState(0);\r\n\r\n  // Function to handle the form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); // prevent the default form submission behavior\r\n    setIsLifting(true); // start lifting\r\n    setTimer(3); // set countdown to 3 seconds\r\n  };\r\n\r\n  // Function to handle the weight input change\r\n  const handleWeightChange = (event) => {\r\n    setWeight(event.target.value);\r\n  };\r\n\r\n  // Function to handle the reps input change\r\n  const handleRepsChange = (event) => {\r\n    setReps(event.target.value);\r\n  };\r\n\r\n  // Function to handle the hold time input change\r\n  const handleHoldTimeChange = (event) => {\r\n    setHoldTime(event.target.value);\r\n  };\r\n\r\n  // Countdown effect for lifting\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (isLifting && timer > 0) {\r\n      timerId = setTimeout(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n    } else if (isLifting && timer === 0) {\r\n      setIsLifting(false);\r\n      setIsHolding(true);\r\n      setTimer(holdTime); // start holding for the specified hold time\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [isLifting, holdTime, timer]);\r\n\r\n  // Countdown effect for holding\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (isHolding && timer > 0) {\r\n      timerId = setTimeout(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n    } else if (isHolding && timer === 0) {\r\n      setIsHolding(false);\r\n      setIsBreaking(true);\r\n      setBreakTimer(30); // start the break timer\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [isHolding, timer]);\r\nuseEffect(() => {\r\n    let timerId;\r\n    if (isBreaking && timer > 0) {\r\n      timerId = setTimeout(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n    } else if (isBreaking && timer === 0) {\r\n      setIsBreaking(false);\r\n      setIsLifting(true);\r\n      setReps(reps + 1/weight); // increment the reps\r\n      setTimer(3); // set countdown to 3 seconds\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [isBreaking, timer, reps, weight]);\r\n\r\n  // Function to handle the restart button click\r\n  const handleRestartClick = () => {\r\n    setIsBreaking(false);\r\n    setIsLifting(true);\r\n    setReps(reps + 1/weight); // increment the reps\r\n    setTimer(3); // set countdown to 3 seconds\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{name}</h2>\r\n      <img src={isLifting ? img[1].name : isHolding ? img[0].name : img[2].name} alt={name} />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Weight:\r\n          <input type=\"number\" value={weight} onChange={handleWeightChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Reps:\r\n          <input type=\"number\" value={reps} onChange={handleRepsChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Hold time:\r\n          <input type=\"number\" value={holdTime} onChange={handleHoldTimeChange} />\r\n        </label>\r\n        <br />\r\n        {!isLifting && !isHolding && !isBreaking && <button type=\"submit\">Start exercise</button>}\r\n        {(isLifting || isBreaking) && <p>{isLifting ? `Lifting ${timer}...` : `Break for ${timer} seconds...`}</p>}\r\n        {isHolding && <p>Hold for {timer}...</p>}\r\n        {isBreaking && (\r\n          <div>\r\n            <button disabled={true}>Restart</button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}