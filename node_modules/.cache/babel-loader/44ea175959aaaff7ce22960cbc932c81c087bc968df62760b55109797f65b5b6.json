{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmya2\\\\github-classroom\\\\UCF-GaiM\\\\dig4639-s23-main-mmya2300\\\\unit1\\\\lab6\\\\src\\\\components\\\\WeightExercise\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeightExercise(props) {\n  _s();\n  // Destructure the props to extract the name and image\n  const {\n    name,\n    img\n  } = props.selectedWorkout;\n\n  // State variables to keep track of the input values and exercise state\n  const [weight, setWeight] = useState(0);\n  const [reps, setReps] = useState(0);\n  const [holdTime, setHoldTime] = useState(0);\n  const [currentRep, setCurrentRep] = useState(0);\n\n  // Countdown effect for lifting\n  useEffect(() => {\n    let timerId;\n    if (currentRep <= reps) {\n      setIsLifting(true);\n      setTimer(3); // set countdown to 3 seconds\n      timerId = setTimeout(() => {\n        setIsLifting(false);\n        setIsHolding(true);\n        setTimer(holdTime); // start holding for the specified hold time\n        setCurrentRep(currentRep + 1);\n      }, 3000);\n    } else if (currentRep > reps) {\n      setIsHolding(false);\n      setIsBreaking(true);\n    }\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [currentRep, reps, holdTime]);\n\n  // Countdown effect for holding\n  useEffect(() => {\n    let timerId;\n    if (isHolding && timer > 0) {\n      timerId = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n    } else if (isHolding && timer === 0) {\n      setIsHolding(false);\n      setIsLifting(true);\n      setTimer(3); // set countdown to 3 seconds\n    }\n\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [isHolding, timer]);\n\n  // Function to handle the restart button click\n  const handleRestartClick = () => {\n    setIsBreaking(false);\n    setCurrentRep(1);\n  };\n\n  // State variables to keep track of the exercise state\n  const [isLifting, setIsLifting] = useState(false);\n  const [isHolding, setIsHolding] = useState(false);\n  const [isBreaking, setIsBreaking] = useState(false);\n  const [timer, setTimer] = useState(0);\n\n  // Function to handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault(); // prevent the default form submission behavior\n    setCurrentRep(1);\n  };\n\n  // Function to handle the weight input change\n  const handleWeightChange = event => {\n    setWeight(event.target.value);\n  };\n\n  // Function to handle the reps input change\n  const handleRepsChange = event => {\n    setReps(event.target.value);\n  };\n\n  // Function to handle the hold time input change\n  const handleHoldTimeChange = event => {\n    setHoldTime(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: isLifting ? img[1].name : isHolding ? img[0].name : img[2].name,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Weight:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: weight,\n          onChange: handleWeightChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Reps:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: reps,\n          onChange: handleRepsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hold time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: holdTime,\n          onChange: handleHoldTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), reps > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [isLifting && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Lifting \", timer, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), isHolding && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Hold for \", timer, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), isBreaking && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Break for 60 seconds...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRestartClick,\n            children: \"Restart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), !isLifting && !isHolding && !isBreaking && reps === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Start exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 3\n  }, this);\n}\n_s(WeightExercise, \"BZ5chPKfCgmbQqtmvTd0paSQdZw=\");\n_c = WeightExercise;\nvar _c;\n$RefreshReg$(_c, \"WeightExercise\");","map":{"version":3,"names":["React","useState","useEffect","WeightExercise","props","name","img","selectedWorkout","weight","setWeight","reps","setReps","holdTime","setHoldTime","currentRep","setCurrentRep","timerId","setIsLifting","setTimer","setTimeout","setIsHolding","setIsBreaking","clearTimeout","isHolding","timer","handleRestartClick","isLifting","isBreaking","handleSubmit","event","preventDefault","handleWeightChange","target","value","handleRepsChange","handleHoldTimeChange"],"sources":["C:/Users/mmya2/github-classroom/UCF-GaiM/dig4639-s23-main-mmya2300/unit1/lab6/src/components/WeightExercise/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function WeightExercise(props) {\r\n  // Destructure the props to extract the name and image\r\n  const { name, img } = props.selectedWorkout;\r\n\r\n  // State variables to keep track of the input values and exercise state\r\n  const [weight, setWeight] = useState(0);\r\n  const [reps, setReps] = useState(0);\r\n  const [holdTime, setHoldTime] = useState(0);\r\n  const [currentRep, setCurrentRep] = useState(0);\r\n\r\n  // Countdown effect for lifting\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (currentRep <= reps) {\r\n      setIsLifting(true);\r\n      setTimer(3); // set countdown to 3 seconds\r\n      timerId = setTimeout(() => {\r\n        setIsLifting(false);\r\n        setIsHolding(true);\r\n        setTimer(holdTime); // start holding for the specified hold time\r\n        setCurrentRep(currentRep + 1);\r\n      }, 3000);\r\n    } else if (currentRep > reps) {\r\n      setIsHolding(false);\r\n      setIsBreaking(true);\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [currentRep, reps, holdTime]);\r\n\r\n  // Countdown effect for holding\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (isHolding && timer > 0) {\r\n      timerId = setTimeout(() => {\r\n        setTimer(timer - 1);\r\n      }, 1000);\r\n    } else if (isHolding && timer === 0) {\r\n      setIsHolding(false);\r\n      setIsLifting(true);\r\n      setTimer(3); // set countdown to 3 seconds\r\n    }\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [isHolding, timer]);\r\n\r\n  // Function to handle the restart button click\r\n  const handleRestartClick = () => {\r\n    setIsBreaking(false);\r\n    setCurrentRep(1);\r\n  };\r\n\r\n  // State variables to keep track of the exercise state\r\n  const [isLifting, setIsLifting] = useState(false);\r\n  const [isHolding, setIsHolding] = useState(false);\r\n  const [isBreaking, setIsBreaking] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n\r\n  // Function to handle the form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault(); // prevent the default form submission behavior\r\n    setCurrentRep(1);\r\n  };\r\n\r\n  // Function to handle the weight input change\r\n  const handleWeightChange = (event) => {\r\n    setWeight(event.target.value);\r\n  };\r\n\r\n  // Function to handle the reps input change\r\n  const handleRepsChange = (event) => {\r\n    setReps(event.target.value);\r\n  };\r\n\r\n  // Function to handle the hold time input change\r\n  const handleHoldTimeChange = (event) => {\r\n    setHoldTime(event.target.value);\r\n  };\r\n  return (\r\n  <div>\r\n    <h2>{name}</h2>\r\n    <img src={isLifting ? img[1].name : isHolding ? img[0].name : img[2].name} alt={name} />\r\n\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Weight:\r\n        <input type=\"number\" value={weight} onChange={handleWeightChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Reps:\r\n        <input type=\"number\" value={reps} onChange={handleRepsChange} />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Hold time:\r\n        <input type=\"number\" value={holdTime} onChange={handleHoldTimeChange} />\r\n      </label>\r\n      <br />\r\n      {reps > 0 && (\r\n        <div>\r\n          {isLifting && <p>Lifting {timer}...</p>}\r\n          {isHolding && <p>Hold for {timer}...</p>}\r\n          {isBreaking && (\r\n            <div>\r\n              <p>Break for 60 seconds...</p>\r\n              <button onClick={handleRestartClick}>Restart</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isLifting && !isHolding && !isBreaking && reps === 0 && (\r\n        <button type=\"submit\">Start exercise</button>\r\n      )}\r\n    </form>\r\n  </div>\r\n);\r\n      }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}