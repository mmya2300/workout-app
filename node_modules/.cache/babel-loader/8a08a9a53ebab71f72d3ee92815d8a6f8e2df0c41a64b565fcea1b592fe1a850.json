{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmya2\\\\github-classroom\\\\UCF-GaiM\\\\dig4639-s23-main-mmya2300\\\\unit1\\\\lab6\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// components\nimport RepetitionExercise from \"./components/RepetitionExercise\";\nimport DurationExercise from \"./components/DurationExercise\";\nimport WeightExercise from \"./components/WeightExercise\";\n\n// images\nimport runningImage from \"./images/running_duration.png\";\nimport pushupsImage from \"\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // create the state for the selected workout\n  // it's null because nothing is in there at the moment\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\n  const workouts = [{\n    name: \"Push-ups\",\n    type: \"repetition\",\n    img: [{\n      name: pushupsImage,\n      altText: \"person doing push-ups\"\n    }]\n  }, {\n    name: \"Running\",\n    type: \"duration\",\n    img: [{\n      name: runningImage,\n      altText: \"person running\"\n    }]\n  }, {\n    name: \"Planks\",\n    type: \"duration\",\n    img: [{\n      name: planksImage,\n      altText: \"person doing planks\"\n    }]\n  }, {\n    name: \"Weight-Lifting\",\n    type: \"weights\",\n    img: [{\n      name: holdPose,\n      altText: \"person lifting weights\"\n    }, {\n      name: liftPose,\n      altText: \"person lifting weights\"\n    }, {\n      name: breakPose,\n      altText: \"person lifting weights\"\n    }]\n  }];\n  // makes it so the value in selectedWorkout is based on what object is clicked\n  function handleWorkoutClick(workout) {\n    setSelectedWorkout(workout);\n  }\n  // changes what gets rendered on the page\n  function renderWorkout() {\n    if (selectedWorkout) {\n      // if the button is pressed, based on the type a component will be rendered\n      if (selectedWorkout.type === \"duration\") {\n        return /*#__PURE__*/_jsxDEV(DurationExercise, {\n          name: selectedWorkout.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this);\n      } else if (selectedWorkout.type === \"repetition\") {\n        return /*#__PURE__*/_jsxDEV(RepetitionExercise, {\n          name: selectedWorkout.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 18\n        }, this);\n      } else if (selectedWorkout.type === \"weights\") {\n        return /*#__PURE__*/_jsxDEV(WeightExercise, {\n          name: selectedWorkout.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this);\n      }\n    } else {\n      // this is just the default main menu if nothing is pressed\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Workouts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please Choose an exercise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: workouts.map(workout => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleWorkoutClick(workout),\n              children: workout.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, workout.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children:\n      // returns the renderworkout function to be placed in content\n      renderWorkout()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yDLC6MH7C+rMvwgKN27dGIDwh3Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RepetitionExercise","DurationExercise","WeightExercise","runningImage","pushupsImage","App","selectedWorkout","setSelectedWorkout","workouts","name","type","img","altText","planksImage","holdPose","liftPose","breakPose","handleWorkoutClick","workout","renderWorkout","map"],"sources":["C:/Users/mmya2/github-classroom/UCF-GaiM/dig4639-s23-main-mmya2300/unit1/lab6/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n// components\r\nimport RepetitionExercise from \"./components/RepetitionExercise\";\r\nimport DurationExercise from \"./components/DurationExercise\";\r\nimport WeightExercise from \"./components/WeightExercise\"\r\n\r\n// images\r\nimport runningImage from \"./images/running_duration.png\"\r\nimport pushupsImage from \"\"\r\n\r\nimport \"./App.css\"\r\n\r\nfunction App() {\r\n  // create the state for the selected workout\r\n  // it's null because nothing is in there at the moment\r\n  const [selectedWorkout, setSelectedWorkout] = useState(null);\r\n\r\n const workouts = [\r\n  {\r\n    name: \"Push-ups\",\r\n    type: \"repetition\",\r\n    img: [{ name: pushupsImage, altText: \"person doing push-ups\" }]\r\n  },\r\n  {\r\n    name: \"Running\",\r\n    type: \"duration\",\r\n    img: [{ name: runningImage, altText: \"person running\" }]\r\n  },\r\n  {\r\n    name: \"Planks\",\r\n    type: \"duration\",\r\n    img: [{ name: planksImage, altText: \"person doing planks\" }]\r\n  },\r\n  {\r\n    name: \"Weight-Lifting\",\r\n    type: \"weights\",\r\n    img: [\r\n      { name: holdPose, altText: \"person lifting weights\" },\r\n      { name: liftPose, altText: \"person lifting weights\" },\r\n      { name: breakPose, altText: \"person lifting weights\" }\r\n    ]\r\n  }\r\n];\r\n  // makes it so the value in selectedWorkout is based on what object is clicked\r\n  function handleWorkoutClick(workout) {\r\n    setSelectedWorkout(workout)\r\n  }\r\n  // changes what gets rendered on the page\r\n  function renderWorkout() {\r\n      if (selectedWorkout) { // if the button is pressed, based on the type a component will be rendered\r\n        if (selectedWorkout.type === \"duration\") {\r\n          return <DurationExercise name={selectedWorkout.name} />\r\n      } else if(selectedWorkout.type === \"repetition\") {\r\n          return <RepetitionExercise name={selectedWorkout.name} />\r\n      } else if(selectedWorkout.type === \"weights\") {\r\n        return <WeightExercise name={selectedWorkout.name} />\r\n      }\r\n      } \r\n      else { // this is just the default main menu if nothing is pressed\r\n        return ( \r\n              <> \r\n              <h1>Workouts</h1>\r\n              <p>Please Choose an exercise</p>\r\n              <ul>\r\n                {workouts.map((workout) => (\r\n                <li key={workout.name}>\r\n                  <button onClick={() => handleWorkoutClick(workout)}>{workout.name}</button>\r\n                </li>\r\n              ))}\r\n              </ul>\r\n            </>\r\n              )\r\n          }\r\n        }\r\n     \r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"content\">\r\n          {// returns the renderworkout function to be placed in content\r\n          renderWorkout()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}